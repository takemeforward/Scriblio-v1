require('dotenv').config();
const express = require("express");
const bodyParser = require("body-parser");
const ejs = require("ejs");
const _ = require("lodash");
const mongoose = require("mongoose");
const session = require("express-session");
const passport = require("passport");
const GoogleStrategy = require("passport-google-oauth20").Strategy;

const { User, Blog } = require('./models');
mongoose.connect("mongodb://127.0.0.1:27017/blogr").then(()=> console.log("Connected! blogr"));

const app = express();

app.set("view engine", "ejs");
app.use(bodyParser.urlencoded({extended: true}));
app.use(express.static("public"));

app.use(session({
  secret: "Main Nahi bataunga",
  resave: false,
  saveUninitialized: false
}));

app.use(passport.initialize());
app.use(passport.session());

passport.use(User.createStrategy());

passport.serializeUser(function(user, done) {
  done(null, user.id);
});

passport.deserializeUser(async function(id, done) {
    try {
      const user = await User.findById(id);
      done(null, user);
    } catch (err) {
      done(err, null);
    }
  });
//some variables
const homeStartingContent = "";
// get request functions starts

// home route
app.get("/", function(req, res){
    Blog.find()
    .then((posts)=>{
      res.render("home", {
      startingContent: homeStartingContent,
      posts: posts,
      user: req.user 
      });
    })
    .catch((err)=>{
      console.log("An error occured", err);
    })

});

//login route

app.get("/login", (req, res)=>{
  res.render("login");
});

//post Login

app.post("/login", (req, res)=>{
  const user = new User(req.body);

  req.login(user, (err)=>{
      if(err){
          console.log(err);
          res.redirect("/login");
      }else {
          passport.authenticate("local")(req, res, ()=>{
              res.redirect("/");
          })
      }
  })
});

// logout route
app.get("/logout", (req, res)=>{
  req.logout(()=>{console.log("loggin out")})
  
    res.redirect("/");
  
});

//register route

app.get("/register", (req, res)=>{
  res.render("register");
});
// post route register
app.post("/register", (req, res)=>{

  const newUser = new User(req.body);
  User.register(newUser, req.body.password, (err, user)=>{
   if(err){
       console.log(err);
       res.redirect("/register");
   }else{
       passport.authenticate("local")(req, res, ()=>{
           res.redirect("/");
       })
   }
  })
});

// compose blog get route

app.get("/compose", (req, res)=>{
  if(req.isAuthenticated()){
    res.render("compose");
  }else{
    res.redirect("/login")
  }

});

// compose blog post route

app.post("/compose", (req, res)=>{
  const newBlog = new Blog({
    title: req.body.postTitle,
    content: req.body.postContent,
    author: req.user._id
  });
  newBlog.save().then((result)=>{
    if(result){
      res.redirect("/");
    }else{
      console.log("Havving some issue with posting Blog");
    }
  })
})

// full view of post blog

app.get("/posts/:postName", function(req, res){
  const requestedTitle = _.lowerCase(req.params.postName);
  Blog.find()
  .then((posts)=>{
    posts.forEach(function(post){
        const storedTitle = _.lowerCase(post.title);

        if (storedTitle === requestedTitle) {
          res.render("post", {
            title: post.title,
            content: post.content,
          });
        }
      });
  }).catch((err)=> console.log("An error occured", err));

});
app.listen(3000, function() {
  console.log("Server started on port 3000");
});
